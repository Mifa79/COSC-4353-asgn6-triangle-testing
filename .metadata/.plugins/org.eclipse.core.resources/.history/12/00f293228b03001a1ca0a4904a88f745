import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.math.BigDecimal;
import java.math.RoundingMode;

import org.junit.Test;

public class TriangleTest {
	Point point1 = new Point(0, 0);
	Point point2 = new Point(0, 2);
	Point point3 = new Point(2, 0);
	double side1 = 2;
	double side2 = 2;
	double side3 = Math.pow((point3.getX() - point2.getX()) * (point3.getX() - point2.getX()) + (point3.getY() - point2.getY()) * (point3.getY() - point2.getY()), 0.5);
	
	
	@Test
	public void test_create_Triangle_from_points() {
		Triangle calculated_triangle = new Triangle(point1, point2, point3);
		double calculated_side1 = calculated_triangle.getSide1();
		double calculated_side2 = calculated_triangle.getSide2();
		double calculated_side3 = calculated_triangle.getSide3();
		boolean equal = false;
		if (side1 == calculated_side1 && side2 == calculated_side2 && side3 == calculated_side3) {
			equal = true;
		}
		assertTrue("Correct triangle", equal);
	}
	
	@Test
	public void test_calSide() {
		Triangle calculated_triangle = new Triangle(point1, point2, point3);
		double calculatedSide = calculated_triangle.calSide(point1, point2);
		boolean equal = false;
		if (side1 == calculatedSide) {
			equal = true;
		}
		assertTrue("The side length", equal);
    }
	
	@Test
	public void test_defType() {
		String output = "";
		String expected_output = "The triangle is isoceles.";
		if ((side1 == side2 && side3 != side1) || (side2 == side3 && side1 != side2) || (side1 == side3 && side2 != side1)) {
			output = "The triangle is isoceles.";
			System.out.println("The triangle is isoceles.");
		}
		assertEquals("Triangle is isoceles", expected_output, output);
	}
	
	
	@Test
    public void test_getSemiPerimeter() {
		double sideA = 3;
		double sideB = 4;
		double sideC = 5;
		Triangle triangle = new Triangle(3, 4, 5);
        double expected_semiPerimeter = 6.0;
        assertEquals("SemiPerimeter", expected_semiPerimeter, triangle.getSemiPerimeter(), 0.1);
    }
	
	
	@Test
	public void test_getArea() {
		double sideA = 3;
		double sideB = 4;
		double sideC = 5;
		Triangle triangle = new Triangle(3, 4, 5);
		double expected_area = 36;
        assertEquals("Area", expected_area, triangle.getArea());
	}

}
